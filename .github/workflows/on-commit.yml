name: Sanity
on: [push]
jobs:
  Sanity:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
        click-package: ["", click]
        dicom-package: ["", pydicom, SimpleITK]
    steps:
      - uses: actions/checkout@v2
      - run: >-
          sudo apt-get install -y
          libleptonica-dev
          tesseract-ocr-all
          libtesseract-dev
      - run: python3 -m venv .venv
      - run: >-
          .venv/bin/python
          -m pip install
          wheel
          ${{ matrix.click-package }}
          ${{ matrix.dicom-package }}
      - run: .venv/bin/python setup.py install
      - run: >-
          .venv/bin/python
          setup.py test
          --pytest-args "--junit-xml
          report-pypi-${{ matrix.python-version }}-${{ matrix.click-pacage }}-${{ matrix.dicom-package }}.xml"
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: pypi-junit-${{ matrix.python-version }}
          path: report-*.xml

  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: >-
          sudo apt-get install -y
          libleptonica-dev
          tesseract-ocr-all
          libtesseract-dev
      - run: python3 -m venv .venv
      - run: .venv/bin/python -m pip install wheel
      - run: .venv/bin/python setup.py lint

  Sphinx:
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/main' ||
      github.ref == 'refs/heads/wvxvw/documentation-fixes'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: sudo apt-get update -y
      - run: >-
          sudo apt-get install -y
          libleptonica-dev
          tesseract-ocr-all
          libtesseract-dev
          dvipng
      - run: python3 -m venv .venv
      - run: >-
          .venv/bin/python -m pip install
          wheel
          sphinx-click
          pydicom
          SimpleITK
          click
      - run: .venv/bin/python setup.py install
      - run: .venv/bin/python setup.py apidoc
      - run: .venv/bin/python setup.py build_sphinx
      - name: Publish Docs to Pages
        uses: JamesIves/github-pages-deploy-action@4.1.1
        with:
          branch: gh-pages
          folder: build/sphinx/html

  CondaBuild:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: s-weigand/setup-conda@v1.0.6
        with:
          conda-channels: conda-forge
          python-version: ${{ matrix.python-version }}
      - run: conda config --show-sources
      - run: conda list --show-channel-urls
      - run: conda config --remove channels defaults
      - run: >-
          conda create
          --override-channels
          --name cleanx-build
          --strict-channel-priority
          -c conda-forge
          python=${{ matrix.python-version }}
      - run: conda run -n cleanx-build python setup.py bdist_egg
      - name: Generate conda meta.yaml (Python 3.8)
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8' }}
        run: conda run -n cleanx-build python setup.py genconda
        env:
          STRICT_PACKAGE_VERSIONS: 1
      - name: Generate conda meta.yaml
        if: ${{ matrix.os != 'ubuntu-latest' || matrix.python-version != '3.8' }}
        run: conda run -n cleanx-build python setup.py genconda
        # conda-build installation and the build cannot be in an
        # environment
      - run: cat ./conda-pkg/meta.yaml
      - run: >-
          conda install
          -yq
          --strict-channel-priority
          --override-channels
          -c conda-forge
          conda-build
          $(conda --version | tr ' ' '=')
          python=${{ matrix.python-version }}
      # At worst, this takes about 40-60 minuts
      - run: >-
          conda build
          --override-channels
          --no-anaconda-upload
          -c conda-forge
          ./conda-pkg/
      # At worst, this ma take hours...
      - run: >-
          conda install
          -yq
          -n cleanx-build
          --strict-channel-priority
          --override-channels
          -c conda-forge
          --use-local
          cleanx
          $(conda --version | tr ' ' '=')
          python=${{ matrix.python-version }}
          pytest
          pycodestyle
          sphinx
      - run: >-
          conda run -n cleanx-build
          python
          ./setup.py test
          --pytest-args
          "--junit-xml report-conda-${{ matrix.os }}-${{ matrix.python-version }}.xml"
      - run: conda run -n cleanx-build python setup.py anaconda_gen_env
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: conda-junit-${{ matrix.python-version }}-${{ matrix.os }}
          path: report-*.xml
      - uses: actions/upload-artifact@v2
        with:
          name: cleanx-env-${{ matrix.python-version }}-${{ matrix.os }}
          path: cleanx-env-*.yml

  PublishJUnit:
    runs-on: ubuntu-latest
    needs: [Sanity, CondaBuild]
    steps:
      - uses: actions/download-artifact@v2
      - uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: "*/report-*.xml"

  Paper:
    runs-on: ubuntu-latest
    name: Paper Draft
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build draft PDF
        uses: openjournals/openjournals-draft-action@master
        with:
          journal: joss
          paper-path: paper/paper.md
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: paper
          path: paper/paper.pdf

  Docker:
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/main' ||
      github.ref == 'refs/heads/wvxvw/docker'
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: ./docker/Dockerfile
          push: true
          tags: crabbone/cleanx:latest
