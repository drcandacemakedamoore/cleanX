name: Release

on:
  push:
    tags:
      - v*

jobs:
  PyPIBuild:
    if: ${{ github.repository == 'drcandacemakedamoore/cleanX' }}
    name: Tagged Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
        # Unfortunately, wheel will try to do setup.py install to
        # build a wheel... and we need this stuff to be able to build
        # for CPython.
      - run: >-
          sudo apt-get install -y
          libleptonica-dev
          tesseract-ocr-all
          libtesseract-dev
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - run: python3.8 -m venv .venv
      - run: .venv/bin/python -m pip install wheel twine
      - run: .venv/bin/python setup.py bdist_wheel
      - run: .venv/bin/python setup.py bdist_egg
      - run: >-
          TWINE_USERNAME=__token__
          TWINE_PASSWORD=${{ secrets.PYPI_TOKEN }}
          .venv/bin/python -m twine upload --skip-existing ./dist/*
      - uses: actions/upload-artifact@v2
        with:
          name: pypi-build
          path: dist/*

  CondaBuild:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: s-weigand/setup-conda@v1.0.6
        with:
          conda-channels: conda-forge
          python-version: ${{ matrix.python-version }}
      - run: conda config --remove channels defaults
      # anaconda. Not sure why we needed this, lets see if it works without.
      - run: >
          conda install
          conda-build
          anaconda-client
          conda-verify
          $(conda --version | tr ' ' '=')
          python=${{ matrix.python-version }}
      - run: >-
          conda create
          --override-channels
          --name cleanx-build
          --strict-channel-priority
          -c conda-forge
          python=${{ matrix.python-version }}
      - name: Generate conda meta.yaml (Python 3.8)
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8' }}
        run: conda run -n cleanx-build python setup.py genconda
        env:
          STRICT_PACKAGE_VERSIONS: 1
      - name: Generate conda meta.yaml
        if: ${{ matrix.os != 'ubuntu-latest' || matrix.python-version != '3.8' }}
        run: conda run -n cleanx-build python setup.py genconda
      - run: >-
          conda build
          --override-channels
          -c conda-forge
          --output-folder ./dist
          ./conda-pkg/
      - run: >-
          conda run -n cleanx-build
          python setup.py anaconda_upload
          --token=${{ secrets.ANACONDA_TOKEN }}
          --package=./dist/*/*.tar.bz2
      - uses: actions/upload-artifact@v2
        with:
          name: conda-build-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist/*/*.tar.bz2

  PublishArtifacts:
    runs-on: ubuntu-latest
    needs: [PyPIBuild, CondaBuild]
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: dist
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            ./dist/*/linux-64/cleanx-*.tar.bz2
            ./dist/*/osx-64/cleanx-*.tar.bz2
            ./dist/*/win-64/cleanx-*.tar.bz2
            ./dist/pypi-build/*.whl
            ./dist/pypi-build/*.egg
